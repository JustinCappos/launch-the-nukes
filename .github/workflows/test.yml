name: Test and Validate

on:
  push:
    branches: [ main, master, feat-*, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate Python syntax
      run: |
        python -m py_compile app.py
        python -m py_compile config.py
        python -m py_compile worker.py
        python -m py_compile job_processor.py
        python -m py_compile llm_providers.py
        python -m py_compile mcp_integration.py
        python -m py_compile yaml_mcp_server_factory.py
        
    - name: Check if tests exist and run them
      run: |
        if [ -d "tests" ] && [ "$(ls -A tests/*.py 2>/dev/null)" ]; then
          pip install pytest pytest-cov
          python -m pytest tests/ -v --cov=. --cov-report=xml
        else
          echo "No tests found - skipping test execution"
          echo "Tests directory exists but no Python test files found"
        fi

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Frontend Docker image
      run: |
        docker build -t test-frontend .
        
    - name: Build Worker Docker image
      run: |
        docker build -f Dockerfile.worker -t test-worker .
        
    - name: Build Ollama Docker image
      run: |
        docker build -f Dockerfile.ollama -t test-ollama .
        
    - name: Test Docker images
      run: |
        echo "All Docker images built successfully!"
        docker images | grep test-
